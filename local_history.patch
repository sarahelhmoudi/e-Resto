Index: app/src/main/java/fr/isen/elhmoudi/e_restaurant/CategoryActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/fr/isen/elhmoudi/e_restaurant/CategoryActivity.kt	(date 1620160910756)
+++ app/src/main/java/fr/isen/elhmoudi/e_restaurant/CategoryActivity.kt	(date 1620160910756)
@@ -1,7 +1,6 @@
 package fr.isen.elhmoudi.e_restaurant
 
 import android.content.Intent
-import android.icu.text.CaseMap
 import android.os.Bundle
 import android.util.Log
 import androidx.appcompat.app.AppCompatActivity
@@ -9,66 +8,64 @@
 import com.android.volley.Request
 import com.android.volley.RequestQueue
 import com.android.volley.Response
+
 import com.android.volley.toolbox.JsonObjectRequest
 import com.android.volley.toolbox.Volley
 import com.google.gson.Gson
 import fr.isen.elhmoudi.e_restaurant.databinding.ActivityCategoryBinding
+import fr.isen.elhmoudi.e_restaurant.model.Dish
+import fr.isen.elhmoudi.e_restaurant.model.MenuResult
 import org.json.JSONException
 import org.json.JSONObject
 
-class CategoryActivity : AppCompatActivity(), CategoryAdapter.onItemClickListener {
-
+
+
+class CategoryActivity : AppCompatActivity(), CategoryAdapter.onItemClickListener{
     private var requestQueue: RequestQueue? = null
+
     private lateinit var binding: ActivityCategoryBinding
 
+    fun RecupPlats(categoryTitle: String) {
+        val body = JSONObject();
+        body.put("id_shop", "1")
+        val url = "http://test.api.catering.bluecodegames.com/menu"
+        val request = JsonObjectRequest(Request.Method.POST, url, body, Response.Listener {
+                response ->try {
+            Log.d("de", response.toString())
+            val menu = Gson().fromJson(response.toString(), MenuResult::class.java)
+            displayMenu(menu, categoryTitle)
+        } catch (e: JSONException) {
+            e.printStackTrace()
+        }
+        }, Response.ErrorListener {
+                error -> error.printStackTrace()
+        })
+        requestQueue?.add(request)
+    }
+
+    private fun displayMenu(menu: MenuResult, categoryTitle: String){
+        val dishesByCategory = menu.data.firstOrNull{ it.name == categoryTitle }?.dishes ?: listOf()
+        binding.menuList.layoutManager = LinearLayoutManager(this)
+        binding.menuList.adapter = CategoryAdapter(dishesByCategory,this)
+    }
+
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
         binding = ActivityCategoryBinding.inflate(layoutInflater)
         setContentView(binding.root)
         requestQueue = Volley.newRequestQueue(this)
-
         val categoryName = intent.getStringExtra("category")?:""
+
         binding.categoryTitle.text = categoryName
-
-
-        loadData(categoryName)
-
-        // binding.menuList.layoutManager = LinearLayoutManager(this)
-        // binding.menuList.adapter = CategoryAdapter(listOf("Pate", "Salade", "Voiture", "Burger","Pate", "Salade", "Voiture", "Burger"), this)
-
-    }
-
-    private fun loadData(categoryName: String) {
-        val url = "http://test.api.catering.bluecodegames.com/menu"
-
-        val jsonInput = JSONObject()
-        jsonInput.put("id_shop", "1")
-
-        val jsonObjectRequest =
-            JsonObjectRequest(Request.Method.POST, url, jsonInput, Response.Listener
-            { response ->
-                try {
-                    Log.d("CategoryActivity", "Response: %s".format(response.toString()))
-                    val menu = Gson().fromJson(response.toString(), MenuResult::class.java)
-                    displayMenu(menuResult, categoryName)
-                } catch (e: JSONException) {
-                    e.printStackTrace()
-                }
-            }, Response.ErrorListener { error ->
-                error.printStackTrace()
-            })
-        requestQueue?.add(jsonObjectRequest)
+        RecupPlats(categoryName)
     }
 
-    private fun displayMenu(result: MenuResult, categoryTitle: String) {
-        val categoryTitleList = result.menu.dishes.firstOrNull{ it.name == categoryTitle }?.items ?: listOf()
-        binding.menuList.layoutManager = LinearLayoutManager(this)
-        binding.menuList.adapter = CategoryAdapter(categoryTitleList, this)
-    }
 
-    override fun onItemClick(item: Dish) {
+    override fun onItemClicked(item: Dish) {
         val intent = Intent(this, DetailActivity::class.java)
         intent.putExtra("items", item)
         startActivity(intent)
     }
+
+
 }
\ No newline at end of file
